{"version":3,"sources":["body.js"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,QAAT,QAAyB,mBAAzB;AACA,SAAS,YAAT,QAA6B,sBAA7B;;AAEA,SAAS,KAAT,QAAsB,iBAAtB;;AAEA,OAAO,WAAP;AACA,OAAO,aAAP;;AAEA,SAAS,IAAT,CAAc,OAAd,CAAsB;AAClB,YAAQ;AACJ,cAAM,WAAW,SAAS,QAAT,EAAX,CADF;AAEJ,YAAI,SAAS,KAAT,CAAe,GAAf,CAAmB,eAAnB,CAAJ,EAAyC;;AAErC,mBAAO,MAAM,IAAN,CAAW,EAAE,SAAS,EAAE,KAAK,IAAL,EAAX,EAAb,EAAuC,EAAE,MAAM,EAAE,WAAW,CAAC,CAAD,EAAnB,EAAzC,CAAP,CAFqC;SAAzC;;;AAFI,eAQG,MAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAD,EAAnB,EAAjB,CAAP,CARI;KAAR;AAUA,sBAAkB;AACd,eAAO,MAAM,IAAN,CAAW,EAAE,SAAS,EAAE,KAAK,IAAL,EAAX,EAAb,EAAuC,KAAvC,EAAP,CADc;KAAlB;CAXJ;;AAgBA,SAAS,IAAT,CAAc,SAAd,CAAwB,SAAS,aAAT,GAAyB;AAC7C,SAAK,KAAL,GAAa,IAAI,YAAJ,EAAb,CAD6C;CAAzB,CAAxB;;AAIA,SAAS,IAAT,CAAc,MAAd,CAAqB;AACjB,uBAAmB,KAAnB,EAA0B;;AAEtB,cAAM,cAAN;;;AAFsB,cAKhB,SAAS,MAAM,MAAN,CALO;AAMtB,cAAM,OAAO,OAAO,IAAP,CAAY,KAAZ;;;AANS,aAStB,CAAM,MAAN,CAAa;AACT,gBADS;AAET,uBAAW,IAAI,IAAJ,EAAX;AACA,mBAAO,OAAO,MAAP,EAAP;AACA,sBAAU,OAAO,IAAP,GAAc,QAAd;SAJd;;;AATsB,cAiBtB,CAAO,IAAP,CAAY,KAAZ,GAAoB,EAApB,CAjBsB;KAA1B;;AAoBA,mCAA+B,KAA/B,EAAsC,QAAtC,EAAgD;AAC5C,iBAAS,KAAT,CAAe,GAAf,CAAmB,eAAnB,EAAoC,MAAM,MAAN,CAAa,OAAb,CAApC,CAD4C;KAAhD;CArBJ","file":"body-compiled.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Template } from 'meteor/templating';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport './task.js';\nimport './body.html';\n\nTemplate.body.helpers({\n    tasks() {\n        const instance = Template.instance();\n        if (instance.state.get('hideCompleted')) {\n            // If hide completed is checked, filter tasks\n            return Tasks.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\n        }\n        // Otherwise, return all of the tasks\n\n        return Tasks.find({}, { sort: { createdAt: -1 } });\n    },\n    incompleteCount() {\n        return Tasks.find({ checked: { $ne: true } }).count();\n    },\n});\n\nTemplate.body.onCreated(function bodyOnCreated() {\n    this.state = new ReactiveDict();\n});\n\nTemplate.body.events({\n    'submit .new-task'(event) {\n        // Prevent default browser form submit\n        event.preventDefault();\n\n        // Get value from form element\n        const target = event.target;\n        const text = target.text.value;\n\n        // Insert a task into the collection\n        Tasks.insert({\n            text,\n            createdAt: new Date(), // current time\n            owner: Meteor.userId(),\n            username: Meteor.user().username\n        });\n\n        // Clear form\n        target.text.value = '';\n    },\n\n    'change .hide-completed input'(event, instance) {\n        instance.state.set('hideCompleted', event.target.checked);\n    }\n});"]}